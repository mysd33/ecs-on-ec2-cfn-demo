AWSTemplateFormatVersion: '2010-09-09'
Description: ALB TargetGroup Template for CloudFormation Demo. Depends On cfn-vpc.yaml, cfn-alb.yaml.

#This template is not used.

Parameters:
  StackPrefix:
    Description: Stack Resource Name Prefix
    Type: String
    Default: Demo
  EnvironmentType:
    Description: Which environments to deploy your service.
    Type: String
    AllowedValues: ["Dev", "Staging", "Production"]
    Default: Dev

Mappings:
  TargetGroupDefinitionMap:
    FrontendWebApp:
#      "PathPattern": "/backend-for-frontend/*"
      "PathPattern": "/*"
#      "HealthCheckPath": "/backend-for-frontend/index.html"
      "HealthCheckPath": "/actuator/health"
      "Priority": 1
    BackendService:
#      "PathPattern": "/backend/*"
      "PathPattern": "/*"
#      "HealthCheckPath": "/backend/api/v1/users"
      "HealthCheckPath": "/actuator/health"
      "Priority": 1
#   BackendSampleService:
#     "PathPattern": "/backend/api/v1/sample*"
#     "HealthCheckPath": "/backend/api/v1/healthcheck"
#     "Priority": 2
  DeployEnvironmentMap:
    Production:
      "Protocol": "HTTP"
      "Port": 8080
    Staging:
      "Protocol": "HTTP"
      "Port": 8080
    Dev:
      "Protocol": "HTTP"
      "Port": 8080

Resources:
  #Frontend Web App Target Group
  FrontendTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:      
      Name: !Sub ${StackPrefix}-Frontend-TargetGroup
      TargetType: ip
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      Port: !FindInMap [DeployEnvironmentMap, !Ref EnvironmentType, Port]
      Protocol: !FindInMap [DeployEnvironmentMap, !Ref EnvironmentType, Protocol]
      HealthCheckPath: !FindInMap [TargetGroupDefinitionMap, FrontendWebApp, HealthCheckPath]
      HealthCheckIntervalSeconds: 60
      #HealthyThresholdCount: 3
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'

  FrontendListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref FrontendTargetGroup
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !FindInMap [TargetGroupDefinitionMap, FrontendWebApp, PathPattern]
      ListenerArn:
        Fn::ImportValue: !Sub ${StackPrefix}-PubALB-Listener
      Priority: !FindInMap [TargetGroupDefinitionMap, FrontendWebApp, Priority]

  #Backend Service Target Group
  BackendTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${StackPrefix}-Backend-TargetGroup
      TargetType: ip
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      Port: !FindInMap [DeployEnvironmentMap, !Ref EnvironmentType, Port]
      Protocol: !FindInMap [DeployEnvironmentMap, !Ref EnvironmentType, Protocol]
      HealthCheckPath: !FindInMap [TargetGroupDefinitionMap, FrontendWebApp, HealthCheckPath]
      #HealthCheckIntervalSeconds: 30
      #HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'

  BackendListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref BackendTargetGroup
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !FindInMap [TargetGroupDefinitionMap, BackendService, PathPattern]
      ListenerArn:
        Fn::ImportValue: !Sub ${StackPrefix}-PrivALB-Listener
      Priority: !FindInMap [TargetGroupDefinitionMap, BackendService, Priority]

Outputs:
  FrontendTargetGroup:
    Description: Frontend TargetGroup Service
    Value: !Ref FrontendTargetGroup
    Export:
      Name: !Sub ${StackPrefix}-Frontend-TargetGroup
  BackendTargetGroup:
    Description: Backend TargetGroup Service
    Value: !Ref BackendTargetGroup
    Export:
      Name: !Sub ${StackPrefix}-Backend-TargetGroup
