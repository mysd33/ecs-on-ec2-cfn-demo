AWSTemplateFormatVersion: 2010-09-09
Description: SecurityGroup Template for CloudFormation Demo. Depends on cfn-vpc.yaml.
#Metadata: 

Parameters: 
  StackPrefix:
    Description: Stack Resource Name Prefix
    Type: String
    Default: Demo 
  # Terminal Machine IP (https://checkip.amazonaws.com/)
  TerminalCidrIP:
    Description: CidrIP for terminal machine to Connect to AWS Service
    Type: String
    Default: 0.0.0.0/0    

#Mappings: 

#Conditions: 

Resources:
  #Security Group of Bation EC2
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the bastion
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      #SecurityGroupIngress:
        # Allow access to Bastion SSH from anywhere on the internet
        #- CidrIp: !Ref TerminalCidrIP
        #  IpProtocol: tcp
        #  FromPort: 22
        #  ToPort: 22
        #  Description: Ingress from the terminal machine
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-Bastion-SG 

  # Security Group for VPC Endpoint  
  VPCEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      GroupDescription: Access from VPC Private Subnet Resources
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp:
            Fn::ImportValue: !Sub ${StackPrefix}-VPC-CIDR
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-VPE-SG

  #Security Group of Public ALB for BFF
  PublicALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      SecurityGroupIngress:
        # Allow access to ALB from anywhere on the internet
        - CidrIp: !Ref TerminalCidrIP
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          Description: Ingress from the terminal machine
        - CidrIp: !Ref TerminalCidrIP
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: Ingress from the terminal machine
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PubALB-SG
  #Security Group of Private ALB for Backend
  PrivateALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the private load balancer
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      SecurityGroupIngress:        
        - CidrIp:
            Fn::ImportValue: !Sub ${StackPrefix}-VPC-CIDR
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          Description: Ingress from VPC
        - CidrIp:
            Fn::ImportValue: !Sub ${StackPrefix}-VPC-CIDR
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: Ingress from VPC
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PrivALB-SG          
  
  #Security Group of Public ECS Cluster for BFF
  PublicECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access only from public ALB
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      SecurityGroupIngress:        
        - SourceSecurityGroupId: !Ref PublicALBSecurityGroup
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          Description: Ingress from the public ALB
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PubECS-SG  
  
  #Security Group of Private ECS Cluster for Backend
  PrivateECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access only from private ALB
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      SecurityGroupIngress:        
        - SourceSecurityGroupId: !Ref PrivateALBSecurityGroup
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          Description: Ingress from the private ALB
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PrivECS-SG  
  BatchECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Batch SecurityGroup
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-BatchECS-SG          
  # Security Group of ElastiCache
  ECacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:      
      GroupDescription: Access only from ECS and Bastion to ElastiCache
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref PublicECSSecurityGroup
          IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          Description: Ingress from the Public ECS 
        - SourceSecurityGroupId: !Ref BastionSecurityGroup
          IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          Description: Ingress from the Bastion        
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-ECache-SG 
  # Security Group of RDS Aurora
  AuroraSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:      
      GroupDescription: Access only from ECS and Bastion to Aurora
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref PublicECSSecurityGroup
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          Description: Ingress from the Public ECS 
        - SourceSecurityGroupId: !Ref PrivateECSSecurityGroup
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          Description: Ingress from the Private ECS     
        - SourceSecurityGroupId: !Ref BatchECSSecurityGroup
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          Description: Ingress from the Batch ECS                    
        - SourceSecurityGroupId: !Ref BastionSecurityGroup
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          Description: Ingress from the Bastion        
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-Aurora-SG 

Outputs:
  BastionSecurityGroupID:
    Description: BastionSecurityGroup ID
    Value:  !Ref BastionSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-BastionSecurityGroup-ID
  VPCEndpointSecurityGroupID:
    Description: VPCEndpointSecurityGroup ID
    Value:  !Ref VPCEndpointSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-VPCEndpointSecurityGroup-ID
  PublicALBSecurityGroupID:
    Description: PublicALBSecurityGroup ID
    Value:  !Ref PublicALBSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-PublicALBSecurityGroup-ID
  PrivateALBSecurityGroupID:
    Description: PrivateALBSecurityGroup ID
    Value:  !Ref PrivateALBSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-PrivateALBSecurityGroup-ID
  PublicECSSecurityGroupID:
    Description: PublicECSSecurityGroup ID
    Value:  !Ref PublicECSSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-PublicECSSecurityGroup-ID
  PrivateECSSecurityGroupID:
    Description: PrivateECSSecurityGroup ID
    Value:  !Ref PrivateECSSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-PrivateECSSecurityGroup-ID
  BatchECSSecurityGroupID:
    Description: BatchECSSecurityGroup ID
    Value:  !Ref BatchECSSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-BatchECSSecurityGroup-ID      
  ECacheSecurityGroupID:
    Description: ElastiCache ID
    Value:  !Ref ECacheSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-ECacheSecurityGroup-ID      
  AuroraSecurityGroupID:
    Description: AuroraSecurityGroup ID
    Value:  !Ref AuroraSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-AuroraSecurityGroup-ID          