AWSTemplateFormatVersion: 2010-09-09
Description: IAM Template for CloudFormation Demo. 
#Metadata: 

Parameters: 
  StackPrefix:
    Description: Stack Resource Name Prefix
    Type: String
    Default: Demo
  BffCodeBuildProjectName:
    Description: Backend for Frontend CodeBuild Project Name
    Type: String
    Default: demo-bff-ci    
  BffCodeCommitRepositoryName:
    Description: Backend for Frontend Source Code Repository Location of CodeCommit
    Type: String
    Default: sample-bff
    #Default: backend-for-frontend
  BffCodePipelineName:
    Description: Backend for Frontend CodePipeline Name
    Type: String
    Default: demo-bff-pipeline
  BackendCodeBuildProjectName:
    Description: Backend CodeBuild Project Name
    Type: String
    Default: demo-backend-ci
  BackendCodeCommitRepositoryName:
    Description: Backend Source Code Repository Location of CodeCommit
    Type: String
    Default: sample-backend
    #Default: backend
  BackendCodePipelineName:
    Description: Backend CodePipeline Name
    Type: String
    Default: demo-backend-pipeline  
  BatchCodeBuildProjectName:
    Description: Batch CodeBuild Project Name
    Type: String
    Default: demo-batch-ci
  BatchCodeCommitRepositoryName:
    Description: Batch Source Code Repository Location of CodeCommit
    Type: String
    Default: sample-batch    
  BatchCodePipelineName:
    Description: Batch CodePipeline Name
    Type: String
    Default: demo-batch-pipeline
  ScheduleLaunchCodeBuildProjectName:
    Description: ScheduleLaunch CodeBuild Project Name
    Type: String
    Default: demo-schedulelaunch-ci
  ScheduleLaunchCodeCommitRepositoryName:
    Description: ScheduleLaunch Source Code Repository Location of CodeCommit
    Type: String
    Default: sample-schedulelaunch    
  ScheduleLaunchCodePipelineName:
    Description: ScheduleLaunch CodePipeline Name
    Type: String
    Default: demo-schedulelaunch-pipeline
  ArtifactS3BucketName:
    Description: Artifact Location of S3 Bucket
    Type: String
    Default: mysd33bucket123
  CacheS3Location:
    Description: Artifact Location of S3 Bucket Name/Prefix
    Type: String
    Default: mysd33bucket123/cache    

#Mappings: 

#Conditions: 

Resources:
  #IAM Role for ECS on EC2 AutoScaling LaunchConfiguration
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
  
  ECSIamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ECSRole

  #IAM Role for Frontend ECS Task
  FrontendECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com      
      ManagedPolicyArns:
        #For X-Ray
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        #For FireLens  & S3 Access by App
        #TODO: Review Required Actions of Policy
        - arn:aws:iam::aws:policy/AmazonS3FullAccess   
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess       
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-FrontendECSTaskRole

  #IAM Role for Backend ECS Task
  BackendECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        #For X-Ray
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess      
        #For FireLens      
        #TODO: Review Required Actions of Policy
        - arn:aws:iam::aws:policy/AmazonS3FullAccess   
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-BackendECSTaskRole
  
  #IAM Role for Batch ECS Task
  BatchECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        #For X-Ray
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess      
        #For FireLens  & S3 Access by App
        #TODO: Review Required Actions of Policy
        - arn:aws:iam::aws:policy/AmazonS3FullAccess   
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-BatchECSTaskRole

  #IAM Role for ScheduleLaunch ECS Task
  ScheduleLaunchECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        #For X-Ray
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess      
        #For FireLens  & S3 Access by App
        #TODO: Review Required Actions of Policy
        - arn:aws:iam::aws:policy/AmazonS3FullAccess   
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-ScheduleLaunchECSTaskRole

  #IAM Policy for SQS Access
  SQSAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        # SQSAccess
        - Action:          
          - sqs:SendMessage
          - sqs:ReceiveMessage
          - sqs:DeleteMessage
          - sqs:GetQueueUrl
          Effect: Allow
          Resource:
          - !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:*
      PolicyName: !Sub ${StackPrefix}-SQSTaskPolicy
      Roles:
      - !Ref FrontendECSTaskRole
      - !Ref BatchECSTaskRole
      - !Ref ScheduleLaunchECSTaskRole

  #IAM Policy for DynamoDB Access
  DynamoDBAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        # DynamoDBTableAccess
        - Action:
          - dynamodb:BatchGetItem
          - dynamodb:BatchWriteItem
          - dynamodb:ConditionCheckItem
          - dynamodb:PutItem
          - dynamodb:DescribeTable
          - dynamodb:DeleteItem
          - dynamodb:GetItem
          - dynamodb:Scan
          - dynamodb:Query
          - dynamodb:UpdateItem
          - dynamodb:DescribeLimits
          - dynamodb:ListTables
          - dynamodb:CreateTable
          Effect: Allow
          Resource:
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*/index/*
        - Action:
          - dynamodb:GetShardIterator
          - dynamodb:Scan
          - dynamodb:Query
          - dynamodb:DescribeStream
          - dynamodb:GetRecords
          - dynamodb:ListStreams
          - dynamodb:DescribeLimits
          Effect: Allow
          Resource:          
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*/index/*          
      PolicyName: !Sub ${StackPrefix}-DynamoDBTaskPolicy
      Roles:
      - !Ref BackendECSTaskRole

  #IAM Role for ECS Task Execution  
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-ECSTaskExecutionRole

  #IAM Role for ECS ApplicationAutoScaling
  #TODO: Review Required Actions of Policy Document
  ECSApplicationAutoScalingRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: service-autoscaling
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'application-autoscaling:*'
                  - 'cloudwatch:DescribeAlarms'
                  - 'cloudwatch:PutMetricAlarm'
                  - 'ecs:DescribeServices'
                  - 'ecs:UpdateService'
                Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-ECSApplicationAutoScalingRole       

  #IAM Role for ECS Scheduled Task
  ECSEventRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /      
      AssumeRolePolicyDocument: 
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceEventsRole

  #IAM Role and IAM Policy for CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
  #TODO: Review Required Actions of Policy Document  
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource:
          - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BffCodeBuildProjectName}
          - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BffCodeBuildProjectName}:*          
          - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BackendCodeBuildProjectName}
          - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BackendCodeBuildProjectName}:*          
          - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BatchCodeBuildProjectName}
          - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BatchCodeBuildProjectName}:*
          - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ScheduleLaunchCodeBuildProjectName}
          - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ScheduleLaunchCodeBuildProjectName}:*
        - Action:
          - codecommit:GitPull
          Effect: Allow
          Resource:          
            - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${BffCodeCommitRepositoryName}
            - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${BackendCodeCommitRepositoryName}            
            - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${BatchCodeCommitRepositoryName}                        
            - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${ScheduleLaunchCodeCommitRepositoryName}                                    
        - Action:
          - ecr:BatchCheckLayerAvailability
          - ecr:CompleteLayerUpload
          - ecr:GetAuthorizationToken
          - ecr:InitiateLayerUpload
          - ecr:PutImage
          - ecr:UploadLayerPart
          Effect: Allow
          Resource: "*"
        - Action:
          - ecs:DescribeTaskDefinition
          Effect: Allow
          Resource: "*"          
        - Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetBucketAcl
          - s3:GetBucketLocation
          Effect: Allow
          Resource: 
            - !Sub arn:aws:s3:::${ArtifactS3BucketName}
            - !Sub arn:aws:s3:::${ArtifactS3BucketName}/*      
            - !Sub arn:aws:s3:::${CacheS3Location}            
            - !Sub arn:aws:s3:::${CacheS3Location}/*
      PolicyName: !Sub ${StackPrefix}-CodeBuildPolicy
      Roles:
      - !Ref CodeBuildRole

  #IAM Role for CodeDeploy Service Role
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-CodeDeployServiceRole      

  #CodePipeline Cloud Watch Event IAM Role and IAM Policy
  CodePipelineCloudWatchEventRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CloudWatch-Event-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${BackendCodePipelineName}
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${BffCodePipelineName}
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${BatchCodePipelineName}                  
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${ScheduleLaunchCodePipelineName}                                    
  
  #IAM Role and IAM Policy for CodePipeline
  #TODO: Review Required Actions of Policy Document
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: AWS-CodePipeline-Service-Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'                              
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:*'                
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'ecs:*'
                Resource: '*'
Outputs:
  ECSIamInstanceProfileID:
    Description: ECSIamInstanceProfile ID
    Value: !Ref ECSIamInstanceProfile
    Export: 
      Name: !Sub ${StackPrefix}-ECSIamInstanceProfile-ID
  FrontendECSTaskRoleArn:
    Description: FrontendECSTaskRole Arn
    Value: !GetAtt FrontendECSTaskRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-FrontendECSTaskRole-Arn
  BackendECSTaskRoleArn:
    Description: BackendECSTaskRole Arn
    Value: !GetAtt BackendECSTaskRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-BackendECSTaskRole-Arn      
  BatchECSTaskRoleArn:
    Description: BatchECSTaskRole Arn
    Value: !GetAtt BatchECSTaskRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-BatchECSTaskRole-Arn  
  ScheduleLaunchECSTaskRoleArn:
    Description: ScheduleLaunchECSTaskRole Arn
    Value: !GetAtt ScheduleLaunchECSTaskRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-ScheduleLaunchECSTaskRole-Arn  
  ECSTaskExecutionRoleArn:
    Description: ECSTaskExecutionRole Arn
    Value: !GetAtt ECSTaskExecutionRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-ECSTaskExecutionRole-Arn 
  ECSEventRoleArn:
    Description: ECSEventRole Arn
    Value: !GetAtt ECSEventRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-ECSEventRole-Arn       
  ECSApplicationAutoScalingRoleArn:
    Description: ECS ApplicationAutoScalingRole Arn
    Value: !GetAtt ECSApplicationAutoScalingRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-ECSApplicationAutoScalingRole-Arn
  CodeBuildRoleArn:
    Description: CodeBuildRole Arn
    Value: !GetAtt CodeBuildRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-CodeBuildRole-Arn    
  CodeDeployServiceRoleArn:
    Description: CodeDeployServiceRole Arn
    Value: !GetAtt CodeDeployServiceRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-CodeDeployServiceRole-Arn  
  CodePipelineCloudWatchEventRoleArn:
    Description: CodePipelineCloudWatchEventRole Arn
    Value: !GetAtt CodePipelineCloudWatchEventRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-CodePipelineCloudWatchEventRole-Arn
  CodePipelineServiceRoleArn:
    Description: CodePipelineServiceRole Arn
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export: 
      Name: !Sub ${StackPrefix}-CodePipelineServiceRole-Arn
